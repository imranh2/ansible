---

- name: Create the network configuration file for bond devices
  template:
    src: 'bond_{{ ansible_os_family }}.j2'
    dest: '{{ interfaces_net_path[ansible_os_family] }}/ifcfg-{{ item.device }}'
  with_items: '{{ interfaces_bond_interfaces }}'
  register: bond_result

- name: Make sure the bonding module is loaded
  modprobe:
    name: bonding
    state: present
  when: bond_result|changed

- name: Write configuration files for route configuration
  template:
    src: 'route_{{ ansible_os_family }}.j2'
    dest: '{{ interfaces_net_path[ansible_os_family] }}/route-{{ item.device }}'
  with_items: '{{ interfaces_bond_interfaces }}'
  when: item.route is defined and ansible_os_family == 'RedHat'

- shell: 'ifdown {{ item.item.device }}; ifup {{ item.item.device }}'
  with_items: '{{ bond_result.results }}'
  when: bond_result is defined and item.changed

- name: Create the network configuration file for slave in the bond devices
  template:
    src: 'bond_slave_{{ ansible_os_family }}.j2'
    dest: '{{ interfaces_net_path[ansible_os_family] }}/ifcfg-{{ item.1 }}'
  with_subelements:
   - '{{ interfaces_bond_interfaces }}'
   - bond_slaves
  register: bond_port_result

- shell: 'ifdown {{ item.item.1 }}; ifup {{ item.item.1 }}'
  with_items: '{{ bond_port_result.results }}'
  when: bond_port_result is defined and item.changed

- shell: 'ifdown {{ item.item.device }}; ifup {{ item.item.device }}'
  with_items: '{{ bond_result.results }}'
  when: bond_result is defined and item.changed and ansible_os_family == 'RedHat'
